{"version":3,"sources":["webpack:///./src/components/layouts/Section.tsx","webpack:///./src/components/EventCard.tsx","webpack:///./src/components/sections/EventPage/EventsList.tsx","webpack:///./src/pages/events.tsx"],"names":["Section","_ref","children","page","sectionTitle","hero","background","React","createElement","Fragment","EventSection","_ref2","className","BlogCard","props","dateTime","location","title","description","cta","link","image","href","src","alt","target","rel","type","buttonStyles","EventsList","isPast","events","eventsData","filter","event","Date","expiration_date","getTime","map","index","key","EventCard","EventsPage","intl","useIntl","Layout","SEO","formatMessage","id","FooterCTA","newsletterButton","subCTATextOne","subCTATextTwo","subCTATextLink","Social"],"mappings":"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","file":"component---src-pages-events-tsx-64436e21102e38ec0ee4.js","sourcesContent":["import React from 'react';\n\ninterface SectionProps {\n  children: React.ReactNode;\n  page?: string;\n  sectionTitle?: string;\n  hero?: boolean;\n  background?: boolean;\n}\n\nexport default function Section({ children, page, sectionTitle, hero, background }: SectionProps) {\n  return (\n    <>\n      {page === 'events' && (\n        <EventSection sectionTitle={sectionTitle} background={background} hero={hero}>\n          {children}\n        </EventSection>\n      )}\n    </>\n  );\n}\n\nfunction EventSection({ children, sectionTitle, hero, background }: SectionProps) {\n  return (\n    <section\n      className={`bg-parityGray px-4 ${hero && `-mt-24 `} ${\n        background && 'bg-hero-pattern-dark bg-cover bg-center bg-no-repeat'\n      } `}\n    >\n      <div className={`container ${hero && `pt-24`}`}>\n        <div className=\"text-center py-8 md:py-16 md:flex md:flex-col md:justify-center\">\n          <h3 className=\"text-textDark text-center font-normal md:text-5xl mb-0 md:mb-8\">{sectionTitle}</h3>\n        </div>\n        {children}\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\n\ninterface EventCardProps {\n  dateTime: string;\n  location: string;\n  title: string;\n  description: string;\n  cta: string;\n  link: string;\n  image: string;\n}\n\nexport default function BlogCard(props: EventCardProps) {\n  const { dateTime, location, title, description, cta, link, image } = props;\n  const buttonStyles =\n    'bg-whitefont-title text-base text-textDark opacity-90 px-20 py-2 border border-gray-300 focus:outline-none uppercase';\n  const hoverStyles = 'hover:border-gray-600 transition-transform transform hover:-translate-y-0.5';\n\n  return (\n    <article className=\"bg-white md:mx-4 my-8 rounded-lg shadow\">\n      <div className=\"object-cover\">\n        <a href={link}>\n          <img className=\"rounded-t-lg\" src={image} alt=\"Parity Event Main Image\" />\n        </a>\n      </div>\n      <div className=\"px-4 pb-3\">\n        <div className=\"flex justify-between text-textLight mb-0 uppercase\">\n          <p className=\"text-xs text-parityPink mb-0\">{dateTime}</p>\n          <p className=\"text-xs mb-0\">{location}</p>\n        </div>\n        <div className=\"pt-3 pb-6 h-36 md:h-40\">\n          <p className=\"font-normal my-0\">{title}</p>\n          <p className=\"text-sm font-light my-0\">{description}</p>\n        </div>\n        <div className=\"flex\">\n          <a href={link} target=\"_blank\" rel=\"noreferrer\" className=\"mx-auto\">\n            <button type=\"button\" className={`${buttonStyles} ${hoverStyles}`}>\n              {cta}\n            </button>\n          </a>\n        </div>\n      </div>\n    </article>\n  );\n}\n","import React from 'react';\n\nimport EventCard from '../../EventCard';\nimport eventsData from '../../../../content/events/events.json';\n\ninterface EventRowProps {\n  isPast?: boolean;\n}\n\nexport default function EventsList({ isPast }: EventRowProps) {\n  const { events } = eventsData;\n  return (\n    <>\n      {events\n        .filter(event => {\n          if (isPast) {\n            return new Date(event.expiration_date).getTime() - new Date().getTime() < 0;\n          }\n          return new Date(event.expiration_date).getTime() - new Date().getTime() > 0;\n        })\n        .map((event: any, index) => {\n          return (\n            <div key={index} className=\"w-1/1 md:w-1/2 xl:w-1/3\">\n              <EventCard\n                dateTime={event.dateTime}\n                location={event.location}\n                title={event.title}\n                description={event.description}\n                cta={'LEARN MORE'}\n                link={event.link}\n                image={event.image}\n              />\n            </div>\n          );\n        })}\n    </>\n  );\n}\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport Layout from '../components/layouts/Layout';\nimport SEO from '../components/layouts/SEO';\nimport Social from '../components/Social';\nimport Section from '../components/layouts/Section';\nimport EventsList from '../components/sections/EventPage/EventsList';\nimport FooterCTA from '../components/FooterCTA';\n\nexport default function EventsPage() {\n  const intl = useIntl();\n  return (\n    <Layout>\n      <SEO title={intl.formatMessage({ id: 'events-page-seo' })} />\n      <Section page=\"events\" sectionTitle=\"Join the Next Parity Events\" background hero>\n        <div className=\"flex flex-wrap\">\n          <EventsList />\n        </div>\n      </Section>\n      <Section page=\"events\" sectionTitle=\"Previous Events\">\n        <div className=\"flex flex-wrap\">\n          <EventsList isPast />\n        </div>\n      </Section>\n      <FooterCTA\n        title={`${intl.formatMessage({ id: 'contact-page-footer-title' })}`}\n        newsletterButton={true}\n        subCTATextOne={`${intl.formatMessage({ id: 'contact-page-footer-subcta-one' })}`}\n        subCTATextTwo={`${intl.formatMessage({ id: 'contact-page-footer-subcta-two' })}`}\n        subCTATextLink={`/blog`}\n      />\n      <Social />\n    </Layout>\n  );\n}\n"],"sourceRoot":""}