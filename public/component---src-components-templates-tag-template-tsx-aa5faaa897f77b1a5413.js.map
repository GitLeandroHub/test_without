{"version":3,"sources":["webpack:///./src/components/BlogExcerpt.tsx","webpack:///./src/components/StaticButton.tsx","webpack:///./src/components/templates/tag-template.tsx"],"names":["BlogExcerpt","props","intl","useIntl","title","link","date","mdTags","image","excerpt","timeToRead","tags","tagsData","_useState","useState","tagsInfo","setTagsInfo","useEffect","forEach","mdTag","filter","jsonTag","name","prevState","concat","_toConsumableArray","React","createElement","className","LocalizedLink","to","map","eachTag","index","key","slug","length","src","alt","formatMessage","id","Button","type","buttonStyles","extraClass","children","TagTemplate","pageContext","data","visibleBlogs","setVisibleBlogs","Layout","theme","SEO","tag","allMdx","edges","slice","edge","node","frontmatter","blogTitle","date_published","onClick","StaticButton"],"mappings":"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","file":"component---src-components-templates-tag-template-tsx-aa5faaa897f77b1a5413.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LocalizedLink } from 'gatsby-theme-i18n';\nimport { useIntl } from 'react-intl';\nimport tagsData from '../../content/blog/tags.json';\n\ninterface BlogExcerptProps {\n  title: string;\n  link: string;\n  date: string;\n  mdTags: Array<any>;\n  image: string;\n  excerpt: string;\n  timeToRead: string;\n}\n\nexport default function BlogExcerpt(props: BlogExcerptProps) {\n  const intl = useIntl();\n  const { title, link, date, mdTags, image, excerpt, timeToRead } = props;\n  const { tags } = tagsData;\n  const [tagsInfo, setTagsInfo] = useState([]);\n\n  useEffect(() => {\n    mdTags.forEach((mdTag: string) => {\n      tags.filter((jsonTag: any) => {\n        if (jsonTag.name === mdTag) {\n          setTagsInfo(prevState => {\n            return [...prevState, jsonTag];\n          });\n        }\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"container max-w-screen-md border-b animate-fade-in\">\n      <div className=\"text-center my-10 tracking-wide\">\n        <LocalizedLink className=\"no-underline hover:text-textLight\" to={`/${link}`}>\n          <h2 className=\"font-normal text-2xl md:text-4xl md:leading-tight mb-6\">{title}</h2>\n        </LocalizedLink>\n        <p className=\"text-textLight text-sm my-0\">\n          {date}\n          {` `}in{` `}\n          {tagsInfo.map((eachTag: any, index) => {\n            return (\n              <span key={index}>\n                <LocalizedLink className=\"text-parityPink no-underline hover:underline\" to={eachTag.slug}>\n                  {eachTag.name}\n                </LocalizedLink>\n                {index === tagsInfo.length - 1  ? '' : `, `}\n              </span>\n            );\n          })}\n        </p>\n        <p className=\"text-textLight text-sm my-0\">{timeToRead} min read</p>\n      </div>\n      <div>\n        {image ? (\n          <LocalizedLink to={`/${link}`}>\n            <img className=\"rounded\" src={image} alt={title} />\n          </LocalizedLink>\n        ) : (\n          <div className=\"my-12\"></div>\n        )}\n      </div>\n      <p className=\"md:text-lg my-8\">{excerpt}</p>\n      <div className=\"text-sm mb-14\">\n        <LocalizedLink className=\"text-parityPink no-underline hover:underline\" to={`/${link}`}>\n          <strong>{intl.formatMessage({ id: 'blog-page-continue-reading' })}</strong>\n        </LocalizedLink>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\ninterface StaticButtonProps {\n  children: React.ReactNode;\n  extraClass?: string;\n}\n\nconst buttonStyles =\n  'bg-parityPink font-title text-lg text-white opacity-90 tracking-wider  px-12 py-2 focus:outline-none uppercase';\nconst hoverStyles = 'transition-transform transform hover:-translate-y-0.5';\nconst focusStyles = 'focus:bg-buttonRed';\n\nexport default function Button(props: StaticButtonProps) {\n  return (\n    <button type=\"button\" className={`${buttonStyles} ${hoverStyles} ${focusStyles} ${props.extraClass}`}>\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport { useIntl } from 'react-intl';\nimport Layout from '../layouts/Layout';\nimport SEO from '../layouts/SEO';\nimport BlogExcerpt from '../BlogExcerpt';\n\nimport StaticButton from '../StaticButton';\n\ninterface TagTemplateProps {\n  data: any;\n  pageContext: any;\n}\n\nexport default function TagTemplate(props: TagTemplateProps) {\n  const intl = useIntl();\n  const { pageContext, data } = props;\n  const [visibleBlogs, setVisibleBlogs] = useState(10);\n\n  return (\n    <Layout theme=\"light\">\n      <SEO title={`${pageContext.tag} Blogs`} />\n      <section className=\"block h-hero min-h-heroMin\">\n        <div className=\"absolute h-hero min-h-heroMin z-0 w-full top-0 left-0 bg-hero-blogPage bg-cover bg-center\"></div>\n        <div className=\"container relative text-center text-white h-5/6 flex flex-col justify-center\">\n          <h3 className=\"text-white font-normal md:text-5xl md:mb-8\">\n            {intl.formatMessage({ id: 'blog-page-title' })}\n          </h3>\n          <h4 className=\"text-white font-normal leading-relaxed px-4 mb-8 text-lg md:text-2xl md:px-24\">\n            {pageContext.tag}\n          </h4>\n        </div>\n      </section>\n      <section className=\"mx-4 -mt-16\">\n        {data.allMdx.edges.slice(0, visibleBlogs).map((edge: any, index: any) => {\n          return (\n            <article key={index}>\n              <BlogExcerpt\n                title={edge.node.frontmatter.blogTitle}\n                link={edge.node.frontmatter.slug}\n                date={edge.node.frontmatter.date_published}\n                mdTags={edge.node.frontmatter.tags}\n                image={edge.node.frontmatter.image}\n                excerpt={edge.node.excerpt}\n                timeToRead={edge.node.timeToRead}\n              />\n            </article>\n          );\n        })}\n        <div className=\"flex justify-center my-10\">\n          {visibleBlogs < data.allMdx.edges.length ? (\n            <div onClick={() => setVisibleBlogs(visibleBlogs + 10)}>\n              <StaticButton>Load more</StaticButton>\n            </div>\n          ) : null}\n        </div>\n      </section>\n\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($tag: String!) {\n    allMdx(\n      filter: { frontmatter: { tags: { eq: $tag } } }\n      sort: { fields: frontmatter___date_published, order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            author\n            blogTitle\n            date_published(formatString: \"MMMMM DD, YYYY\")\n            image\n            slug\n            tags\n          }\n          excerpt(pruneLength: 220)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}