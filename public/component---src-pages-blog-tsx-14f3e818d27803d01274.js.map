{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/BlogExcerpt.tsx","webpack:///./src/components/StaticButton.tsx","webpack:///./src/components/Social.tsx"],"names":["BlogPage","props","intl","useIntl","data","_useState","useState","visibleBlogs","setVisibleBlogs","React","createElement","Layout","theme","SEO","title","formatMessage","id","className","allMdx","edges","slice","map","edge","index","key","BlogExcerpt","node","frontmatter","blogTitle","link","slug","date","date_published","mdTags","tags","image","excerpt","timeToRead","length","onClick","StaticButton","Social","tagsData","tagsInfo","setTagsInfo","useEffect","forEach","mdTag","filter","jsonTag","name","prevState","concat","_toConsumableArray","LocalizedLink","to","eachTag","src","alt","Button","type","buttonStyles","extraClass","children","socialIcons","socialLinks","useStaticQuery","href","site","siteMetadata","twitter","target","rel","role","viewBox","xmlns","d","github","telegram","element","width","height","version"],"mappings":"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","file":"component---src-pages-blog-tsx-14f3e818d27803d01274.js","sourcesContent":["import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport { useIntl } from 'react-intl';\nimport Layout from '../components/layouts/Layout';\nimport BlogExcerpt from '../components/BlogExcerpt';\nimport SEO from '../components/layouts/SEO';\nimport Social from '../components/Social';\nimport StaticButton from '../components/StaticButton';\n\ninterface BlogPageProps {\n  data: any;\n  pageContext: any;\n}\n\nexport default function BlogPage(props: BlogPageProps) {\n  const intl = useIntl();\n  const { data } = props;\n  const [visibleBlogs, setVisibleBlogs] = useState(10);\n\n  return (\n    <Layout theme=\"light\">\n      <SEO title={intl.formatMessage({ id: 'blog-page-seo' })} />\n      <section className=\"block h-hero min-h-heroMin\">\n        <div className=\"absolute h-hero min-h-heroMin z-0 w-full top-0 left-0 bg-hero-blogPage bg-cover bg-center\"></div>\n        <div className=\"container relative text-center text-white h-5/6 flex flex-col justify-center\">\n          <h3 className=\"text-white font-bold md:text-5xl md:mb-8\">\n            {intl.formatMessage({ id: 'blog-page-title' })}\n          </h3>\n          <h4 className=\"text-white font-normal leading-relaxed px-4 mb-8 text-lg md:text-2xl md:px-24\">\n            {intl.formatMessage({ id: 'blog-page-description' })}\n          </h4>\n        </div>\n      </section>\n      <section className=\"mx-4 -mt-16\">\n        {data.allMdx.edges.slice(0, visibleBlogs).map((edge: any, index: any) => {\n          return (\n            <article key={index}>\n              <BlogExcerpt\n                title={edge.node.frontmatter.blogTitle}\n                link={edge.node.frontmatter.slug}\n                date={edge.node.frontmatter.date_published}\n                mdTags={edge.node.frontmatter.tags}\n                image={edge.node.frontmatter.image}\n                excerpt={edge.node.excerpt}\n                timeToRead={edge.node.timeToRead}\n              />\n            </article>\n          );\n        })}\n        <div className=\"flex justify-center my-10\">\n          {visibleBlogs < data.allMdx.edges.length ? (\n            <div onClick={() => setVisibleBlogs(visibleBlogs + 10)}>\n              <StaticButton>Load more</StaticButton>\n            </div>\n          ) : null}\n        </div>\n      </section>\n      <Social />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  {\n    allMdx(sort: { fields: frontmatter___date_published, order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            blogTitle\n            date_published(formatString: \"MMMM DD, YYYY\")\n            tags\n            image\n            slug\n          }\n          excerpt(pruneLength: 220)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { LocalizedLink } from 'gatsby-theme-i18n';\nimport { useIntl } from 'react-intl';\nimport tagsData from '../../content/blog/tags.json';\n\ninterface BlogExcerptProps {\n  title: string;\n  link: string;\n  date: string;\n  mdTags: Array<any>;\n  image: string;\n  excerpt: string;\n  timeToRead: string;\n}\n\nexport default function BlogExcerpt(props: BlogExcerptProps) {\n  const intl = useIntl();\n  const { title, link, date, mdTags, image, excerpt, timeToRead } = props;\n  const { tags } = tagsData;\n  const [tagsInfo, setTagsInfo] = useState([]);\n\n  useEffect(() => {\n    mdTags.forEach((mdTag: string) => {\n      tags.filter((jsonTag: any) => {\n        if (jsonTag.name === mdTag) {\n          setTagsInfo(prevState => {\n            return [...prevState, jsonTag];\n          });\n        }\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"container max-w-screen-md border-b animate-fade-in\">\n      <div className=\"text-center my-10 tracking-wide\">\n        <LocalizedLink className=\"no-underline hover:text-textLight\" to={`/${link}`}>\n          <h2 className=\"font-normal text-2xl md:text-4xl md:leading-tight mb-6\">{title}</h2>\n        </LocalizedLink>\n        <p className=\"text-textLight text-sm my-0\">\n          {date}\n          {` `}in{` `}\n          {tagsInfo.map((eachTag: any, index) => {\n            return (\n              <span key={index}>\n                <LocalizedLink className=\"text-parityPink no-underline hover:underline\" to={eachTag.slug}>\n                  {eachTag.name}\n                </LocalizedLink>\n                {index === tagsInfo.length - 1  ? '' : `, `}\n              </span>\n            );\n          })}\n        </p>\n        <p className=\"text-textLight text-sm my-0\">{timeToRead} min read</p>\n      </div>\n      <div>\n        {image ? (\n          <LocalizedLink to={`/${link}`}>\n            <img className=\"rounded\" src={image} alt={title} />\n          </LocalizedLink>\n        ) : (\n          <div className=\"my-12\"></div>\n        )}\n      </div>\n      <p className=\"md:text-lg my-8\">{excerpt}</p>\n      <div className=\"text-sm mb-14\">\n        <LocalizedLink className=\"text-parityPink no-underline hover:underline\" to={`/${link}`}>\n          <strong>{intl.formatMessage({ id: 'blog-page-continue-reading' })}</strong>\n        </LocalizedLink>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\ninterface StaticButtonProps {\n  children: React.ReactNode;\n  extraClass?: string;\n}\n\nconst buttonStyles =\n  'bg-parityPink font-title text-lg text-white opacity-90 tracking-wider  px-12 py-2 focus:outline-none uppercase';\nconst hoverStyles = 'transition-transform transform hover:-translate-y-0.5';\nconst focusStyles = 'focus:bg-buttonRed';\n\nexport default function Button(props: StaticButtonProps) {\n  return (\n    <button type=\"button\" className={`${buttonStyles} ${hoverStyles} ${focusStyles} ${props.extraClass}`}>\n      {props.children}\n    </button>\n  );\n}\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { useIntl } from 'react-intl';\n\nexport default function Social() {\n  const intl = useIntl();\n  const socialIcons =\n    'w-11 mx-4 md:my-7 h-11 fill-current text-white opacity-70 hover:opacity-100 transition-opacity duration-300';\n  const socialLinks = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          element\n          github\n          linkedIn\n          telegram\n          title\n          twitter\n        }\n      }\n    }\n  `);\n\n  return (\n    <section className=\"h-full bg-parityPink\">\n      <div className=\"container flex flex-col md:flex-row md:justify-evenly items-center\">\n        <div className=\"my-8 md:my-0\">\n          <h4 className=\"text-white md:text-2xl opacity-90\">\n            {intl.formatMessage({ id: 'homepage-social-card-title' })}\n          </h4>\n        </div>\n        <div className=\"flex md:mb-0 mb-8\">\n          <a href={socialLinks.site.siteMetadata.twitter} target=\"_blank\" rel=\"noreferrer\">\n            <svg className={socialIcons} role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <title>Twitter icon</title>\n              <path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path>\n            </svg>\n          </a>\n          <a href={socialLinks.site.siteMetadata.github} target=\"_blank\" rel=\"noreferrer\">\n            <svg className={socialIcons} role=\"img\" xmlns=\"http://www.w3.org/1999/xlink\" viewBox=\"5 5 24 24\">\n              <path d=\"M18.944 26.128H13.743s.007-1.544 0-2.602c-3.56.766-4.553-1.951-4.553-1.951-.65-1.301-1.301-1.951-1.301-1.951-1.301-.773 0-.65 0-.65 1.301 0 1.951 1.301 1.951 1.301 1.142 1.938 3.173 1.626 3.903 1.301 0-.65.285-1.634.65-1.951-2.841-.32-5.207-1.951-5.207-5.204s.653-3.903 1.304-4.553c-.131-.321-.676-1.506.02-3.252 0 0 1.278 0 2.579 1.951.645-.645 2.602-.65 3.253-.65.649 0 2.607.006 3.251.65 1.301-1.951 2.582-1.951 2.582-1.951.695 1.747.152 2.932.02 3.252.65.65 1.301 1.301 1.301 4.553s-2.362 4.884-5.204 5.204c.366.317.65 1.437.65 1.951l.002 4.552z\" />\n            </svg>\n          </a>\n          <a href={socialLinks.site.siteMetadata.telegram} target=\"_blank\" rel=\"noreferrer\">\n            <svg className={socialIcons} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n              <title>Telegram icon</title>\n              <path d=\"M10,0 C15.5228475,0 20,4.4771525 20,10 C20,15.5228475 15.5228475,20 10,20 C4.4771525,20 0,15.5228475 0,10 C0,4.4771525 4.4771525,0 10,0 Z M14.4415206,6 C14.060553,6.00676048 13.476055,6.20741135 10.663148,7.36249773 C9.67796175,7.7670526 7.70897661,8.60437935 4.75619264,9.87447795 C4.27670659,10.0627254 4.02553067,10.2468857 4.00266485,10.4269588 C3.95876487,10.7726802 4.46291296,10.8803081 5.09723696,11.0838761 C5.61440201,11.2498453 6.31007997,11.4440124 6.67173438,11.4517262 C6.99978943,11.4587234 7.36593635,11.3251987 7.77017511,11.051152 C10.5290529,9.21254679 11.9531977,8.28322679 12.0426094,8.26319203 C12.1056879,8.24905787 12.1930992,8.23128593 12.2523244,8.28325656 C12.3115496,8.33522719 12.3057275,8.43364956 12.299454,8.46005377 C12.2492926,8.67117474 9.65764825,10.998457 9.50849738,11.1513987 L9.43697409,11.2233057 C8.88741493,11.7661123 8.33196049,12.1205055 9.290333,12.7440164 C10.155665,13.3069957 10.6592923,13.6661378 11.5507686,14.2430701 C12.1204738,14.6117635 12.5671299,15.0489784 13.1553348,14.9955401 C13.4259939,14.9709508 13.705567,14.7196888 13.8475521,13.9703127 C14.1831052,12.1993135 14.8426779,8.36209709 14.9951103,6.78087197 C15.0084653,6.64233621 14.9916649,6.46503787 14.9781732,6.38720805 C14.9646815,6.30937823 14.9364876,6.19848702 14.8340164,6.11639754 C14.7126597,6.01917896 14.5253109,5.99867765 14.4415206,6 Z\"></path>\n            </svg>\n          </a>\n          <a href={socialLinks.site.siteMetadata.element} target=\"_blank\" rel=\"noreferrer\">\n            <svg className={`${socialIcons}`} width=\"100%\" height=\"100%\" viewBox=\"0 0 112 112\" version=\"1.1\">\n              <path d=\"M56,112C86.928,112 112,86.928 112,56C112,25.072 86.928,0 56,0C25.072,0 0,25.072 0,56C0,86.928 25.072,112 56,112ZM66.303,85.907C66.303,88.168 64.467,90 62.202,90C46.849,90 34.404,77.58 34.404,62.259C34.404,59.999 36.24,58.167 38.505,58.167C40.77,58.167 42.606,59.999 42.606,62.259C42.606,73.059 51.38,81.814 62.202,81.814C64.467,81.814 66.303,83.647 66.303,85.907ZM85.899,45.648C88.164,45.648 90,47.48 90,49.741C90,65.061 77.554,77.481 62.202,77.481C59.937,77.481 58.1,75.649 58.1,73.388C58.1,71.128 59.937,69.295 62.202,69.295C73.024,69.295 81.797,60.54 81.797,49.741C81.797,47.48 83.633,45.648 85.899,45.648ZM26.101,66.352C23.836,66.352 22,64.52 22,62.259C22,46.939 34.446,34.519 49.798,34.519C52.063,34.519 53.9,36.351 53.9,38.612C53.9,40.872 52.063,42.705 49.798,42.705C38.976,42.705 30.203,51.46 30.203,62.259C30.203,64.52 28.367,66.352 26.101,66.352ZM45.762,26.093C45.762,23.833 47.598,22 49.863,22C65.215,22 77.661,34.42 77.661,49.741C77.661,52.001 75.825,53.834 73.56,53.834C71.295,53.834 69.458,52.001 69.458,49.741C69.458,38.941 60.685,30.186 49.863,30.186C47.598,30.186 45.762,28.353 45.762,26.093Z\" />\n            </svg>\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n}"],"sourceRoot":""}